import{_ as o,c as n,o as c,ag as t}from"./chunks/framework.BgId8OS5.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端/开发经验/nvm.md","filePath":"前端/开发经验/nvm.md","lastUpdated":1749111432000}'),d={name:"前端/开发经验/nvm.md"};function s(r,e,a,i,g,l){return c(),n("div",null,e[0]||(e[0]=[t('<h3 id="nvm-是什么" tabindex="-1">nvm 是什么？ <a class="header-anchor" href="#nvm-是什么" aria-label="Permalink to &quot;nvm 是什么？&quot;">​</a></h3><p><a href="https://nvm.uihtm.com/" target="_blank" rel="noreferrer"><strong>nvm（Node Version Manager）</strong></a> 是一个用于管理 <code>Node.js</code> 版本的命令行工具。它允许开发者在同一台机器上安装和切换多个版本的 <code>Node.js</code>，以便于在不同的项目中使用不同的 <code>Node.js</code> 版本。</p><h4 id="一、卸载node-没有安装的可以直接跳过" tabindex="-1">一、卸载node（没有安装的可以直接跳过） <a class="header-anchor" href="#一、卸载node-没有安装的可以直接跳过" aria-label="Permalink to &quot;一、卸载node（没有安装的可以直接跳过）&quot;">​</a></h4><p>nvm 是一个 nodejs 的版本管理工具。通过它可以安装和切换不同版本的 nodejs，解决 node 各种版本存在不兼容现象。但在安装之前需要先卸载之前的 nodejs</p><p>1）在控制面版或者应用列表中卸载nodejs</p><p><img src="https://i-blog.csdnimg.cn/img_convert/ca3d4c88889dd7582a5f752cd07cbf6b.png" alt="image-20250407165137016"></p><p>（一般，上面删除后环境变量里面会找到删除，<a href="https://so.csdn.net/so/search?q=nvm%E5%AE%89%E8%A3%85&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">nvm安装</a>后会自动写入）<br> 把环境变量中和node有关的全部移除，然后点击确定</p><p><img src="https://i-blog.csdnimg.cn/img_convert/8f5032851f8f42a4ab495357f7213190.png" alt="image-20250407165218122"></p><p>重启电脑，这一步主要目的是清除正在执行的Node进程，如果你能在任务管理器Q 中手动清除Node进程也是可以的，但对于小白来议重启电脑是最好的操作。</p><p>在 cmd命令Q行中输入where node|回车执行。如果有显示具体的目录，把这个目录删掉，以图中为例，这里我们就要删掉D盘下的nodeis文件夹，然后再重启。如果没有显示具体目录，说明已经卸载成功了。可以安心安装其他版本node了.</p><p>2）不行就全局搜索然后删除相关文件</p><p>注：一定要确保windows上没有nodejs，血的教训啊！</p><h4 id="二、下载安装" tabindex="-1">二、下载安装 <a class="header-anchor" href="#二、下载安装" aria-label="Permalink to &quot;二、下载安装&quot;">​</a></h4><ul><li>官网下载： 可选择适合自己电脑操作系统文件进行下载。</li><li><a href="https://pan.quark.cn/s/23ec9b4f241b" target="_blank" rel="noreferrer">网盘下载：</a>windows` 版本。</li></ul><p>1、<strong>安装 nvm 到本地</strong></p><p>1.1、下载到电脑本地后，双击安装程序，同意许可协议，如下：</p><p><img src="https://i-blog.csdnimg.cn/img_convert/1c8ba189dd3f84609e899cae4b63c7b8.png" alt="image-20250407165837331"></p><p><img src="https://i-blog.csdnimg.cn/img_convert/cafe1c82743c6050166d1e3919df15f3.png" alt="image-20250407165942783"></p><p>1.2、选择 <code>nvm</code> 的安装路径，可自定义安装路径，如下：</p><p><img src="https://i-blog.csdnimg.cn/img_convert/f216590c507c39c3f6a90a1090a3356d.png" alt="image-20250407170018522"></p><p>1.3、next下一步安装至安装完成。</p><p><img src="https://i-blog.csdnimg.cn/img_convert/a80e8e8a3755b406bff365d797ea36a5.png" alt="image-20250407170119198"></p><p>1.4、验证是否安装成功，以管理员身份打开命令窗口，输入 <code>nvm -v</code>，如下：</p><p><img src="https://i-blog.csdnimg.cn/img_convert/0bdc2ec5ab6eecfba82ebe3cd28d3e5f.png" alt="image-20250407170157438"></p><h4 id="三、nvm切换镜像源" tabindex="-1">三、NVM切换镜像源 <a class="header-anchor" href="#三、nvm切换镜像源" aria-label="Permalink to &quot;三、NVM切换镜像源&quot;">​</a></h4><p><code>nvm</code> 默认官方源多在国外，受服务器位置、带宽及网络状况影响，易出现下载速度慢甚至失败的情况。同时，部分地区存在网络限制，无法访问官方源。切换为国内镜像源，可显著提升下载速度，绕过网络阻碍，提高下载成功率，还能节省成本与资源。</p><p>1、 以管理员身份打开命令窗口，输入 <code>nvm root</code>，可查看 <code>nvm</code> 的具体安装路径，如下：</p><p><img src="https://i-blog.csdnimg.cn/img_convert/c8b63d94c58e31dcf5d7d92d808775ac.png" alt="image-20250407170318803"></p><p>2、找到 <code>setting.txt</code> 文件并打开，如下：</p><p><img src="https://i-blog.csdnimg.cn/img_convert/451b71cbc500ac098833147debc4bfbc.png" alt="image-20250407170434277"></p><p>3、复制以下代码，粘贴至 <code>setting.txt</code> 文件中，最后保存即可完成 <code>nvm</code> 源切换，如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>node_mirror: https://npmmirror.com/mirrors/node/</span></span>\n<span class="line"><span>npm_mirror: https://npmmirror.com/mirrors/npm/</span></span></code></pre></div><p><img src="https://i-blog.csdnimg.cn/img_convert/8f7d1f48137b074acd0cf8ef368608fa.png" alt="image-20250407170501003"></p><h4 id="四、nvm-常用命令" tabindex="-1">四、nvm 常用命令 <a class="header-anchor" href="#四、nvm-常用命令" aria-label="Permalink to &quot;四、nvm 常用命令&quot;">​</a></h4><p>1、安装与卸载相关</p><p><strong><code>nvm install &lt;version&gt;</code></strong></p><ul><li><strong>含义</strong><br> 安装指定版本的 <code>Node.js</code>。 可以是具体的版本号，如 <code>18.16.0</code>，也可以是特定标识，像 <code>latest</code>（安装最新稳定版）、<code>lts</code>（安装长期支持版）。</li><li><strong>栗子</strong><br><code>nvm install 16.19.1</code> 会安装 <code>Node.js 16.19.1</code> 版本。</li></ul><p><img src="https://i-blog.csdnimg.cn/img_convert/cd573c329a6ffc4a9d9c9a8997887fcf.png" alt="image-20250407170753680"></p><p><strong><code>nvm uninstall &lt;version&gt;</code></strong></p><ul><li><strong>含义</strong><br> 卸载指定版本的 <code>Node.js</code>。</li><li><strong>栗子</strong><br><code>nvm uninstall 16.19.1</code> 会将已安装的 <code>Node.js 16.19.1</code> 版本卸载。</li><li><img src="https://i-blog.csdnimg.cn/img_convert/80a0ac5e813633fdfb019df51dc3da9a.png" alt="image-20250407170823740"></li></ul><p>2、版本查看与管理相关</p><p><strong><code>nvm list</code> 或者 <code>nvm ls</code></strong></p><ul><li><strong>含义</strong><br> 列出当前系统中已安装的所有 <code>Node.js</code> 版本，当前正在使用的版本会有特殊标识。</li><li><strong>栗子</strong><br> 执行该命令后，当前系统中已安装的所有 <code>Node.js</code> 版本列表，如 <code>v22.12.0</code>、<code>v16.14.0</code> 等。</li></ul><p><img src="https://i-blog.csdnimg.cn/img_convert/49bfeff520978d3ef63048f5a3efe861.png" alt="image-20250407170944675"></p><p><strong><code>nvm list available</code></strong></p><ul><li><strong>含义</strong><br> 列出所有可下载的 <code>Node.js</code> 版本，包括稳定版、测试版等。</li><li><strong>栗子</strong><br> 运行该命令会展示一系列可下载的版本列表，如 <code>v23.7.0</code>、<code>v22.13.1</code> 等。</li></ul><p><img src="https://i-blog.csdnimg.cn/img_convert/fb0a8c99042706a33ec2d2a4eb9d37d3.png" alt="image-20250407171032451"></p><p><strong><code>nvm current</code></strong></p><ul><li><strong>含义</strong><br> 显示当前正在使用的 <code>Node.js</code> 版本。</li><li><strong>栗子</strong><br> 当前使用的是 <code>Node.js 22.12.0</code> 版本，执行该命令会输出 <code>v22.12.0</code>。</li></ul><p><img src="https://i-blog.csdnimg.cn/img_convert/de88884c2aca89229685bdd0405bc716.png" alt="image-20250407171103842"></p><p><strong><code>nvm use &lt;version&gt;</code></strong></p><ul><li><strong>含义</strong><br> 切换到指定版本的 <code>Node.js</code> 环境，后续在该命令行窗口中执行的 <code>Node.js</code> 相关命令都会使用此版本。</li><li><strong>栗子</strong><br><code>nvm use 22.12.0</code> 会将当前环境切换到 <code>Node.js 22.12.0</code> 版本。</li><li><img src="https://i-blog.csdnimg.cn/img_convert/b5a4829ae76445461a0ee0d7d0caad51.png" alt="image-20250407171234299"></li></ul><p>3、环境配置与代理相关</p><p><strong><code>nvm arch</code></strong></p><ul><li><strong>含义</strong><br> 显示当前 <code>Node.js</code> 实例的架构（<code>32</code> 位或 <code>64</code> 位）。</li><li><strong>栗子</strong><br> 如果当前 <code>Node.js</code> 是 <code>64</code> 位版本，执行该命令会输出 <code>64-bit</code>。</li></ul><p><img src="https://i-blog.csdnimg.cn/img_convert/ce7ea6f156b820464c59aca613a819ac.png" alt="image-20250407171400002"></p><p><strong><code>nvm proxy</code></strong></p><ul><li><strong>含义</strong><br> 用于查看设置与代理。</li><li><strong>栗子</strong><br> 通过 <code>nvm arch</code> 查看是否代理。</li></ul><p><img src="https://i-blog.csdnimg.cn/img_convert/efa7ec6624c54d7fd954f6c37b0f0765.png" alt="image-20250407171440876"></p><p>4、帮助与版本信息</p><p><strong><code>nvm help</code></strong></p><ul><li><strong>含义</strong><br> 显示 <code>nvm</code> 的帮助文档，列出所有可用命令及其简要说明。</li><li><strong>栗子</strong><br> 执行该命令后会展示一系列命令及对应的功能描述。</li></ul><p><img src="https://i-blog.csdnimg.cn/img_convert/832d8ca99746cdc1a09f407ac3045bfb.png" alt="image-20250407171530370"></p><p><strong><code>nvm version</code></strong></p><ul><li><strong>含义</strong><br> 显示当前安装的 <code>nvm</code> 的版本号。</li><li><strong>栗子</strong><br> 执行后输出 <code>1.1.12</code> 这样的版本信息。</li></ul><p><img src="https://i-blog.csdnimg.cn/img_convert/588d8e82df276ffaf8564764512f0b49.png" alt="image-20250407171610909"></p><h4 id="五、结尾" tabindex="-1">五、结尾 <a class="header-anchor" href="#五、结尾" aria-label="Permalink to &quot;五、结尾&quot;">​</a></h4><p>在 Node.js 开发的多元场景下，nvm 作为一款强大的版本管理工具，极大地提升了开发效率与项目的稳定性。通过 nvm，开发者能够在同一系统中便捷地安装、切换不同版本的 Node.js，满足不同项目对特定 Node.js 版本的依赖需求。熟练掌握 nvm 的使用方法，能让大家更好地应对 Node.js 版本管理难题，为项目开发和维护带来便利，也是每一位 Node.js 开发者必备的技能。希望本文能助力大家更高效地运用 nvm，提升开发体验。</p><p>本文转自 <a href="https://blog.csdn.net/qq_42343318/article/details/147048710" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_42343318/article/details/147048710</a>，如有侵权，请联系删除。</p>',69)]))}const b=o(d,[["render",s]]);export{m as __pageData,b as default};
