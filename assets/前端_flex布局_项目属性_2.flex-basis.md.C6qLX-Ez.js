import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.BgId8OS5.js";const f=JSON.parse('{"title":"flex-basis","description":"","frontmatter":{},"headers":[],"relativePath":"前端/flex布局/项目属性/2.flex-basis.md","filePath":"前端/flex布局/项目属性/2.flex-basis.md","lastUpdated":1749111432000}'),l={name:"前端/flex布局/项目属性/2.flex-basis.md"};function n(p,s,h,o,r,d){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="flex-basis" tabindex="-1">flex-basis <a class="header-anchor" href="#flex-basis" aria-label="Permalink to &quot;flex-basis&quot;">​</a></h1><p><strong>定义了在分配多余空间之前，项目占据的主轴空间，浏览器根据这个属性，计算主轴是否有多余空间</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    flex-basis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;length&gt; | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>默认值：auto，即项目本来的大小, 这时候 item 的宽高取决于 width 或 height 的值。</p><p><strong>当主轴为水平方向的时候，当设置了 flex-basis，项目的宽度设置值会失效，flex-basis 需要跟 flex-grow 和 flex-shrink 配合使用才能发挥效果。</strong></p><ul><li>当 flex-basis 值为 0 % 时，是把该项目视为零尺寸的，故即使声明该尺寸为 140px，也并没有什么用，计算剩余空间还是会把它算进去。</li><li>当 flex-basis 值为 auto 时，则跟根据尺寸的设定值(假如为 100px)，则这 100px 不会纳入剩余空间。</li></ul><p>可以是长度单位，也可以是百分比。<code>flex-basis</code>的优先级高于<code>width、height</code>属性。</p>`,7)]))}const k=a(l,[["render",n]]);export{f as __pageData,k as default};
